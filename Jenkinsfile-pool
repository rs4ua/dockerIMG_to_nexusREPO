pipeline {
    agent { label 'local-agent' }

    environment {
        DOCKER_IMAGE_NAME = 'httpd'
        DOCKER_IMAGE_VERSION = "1.${env.BUILD_NUMBER}"
        NEXUS_URL = '192.168.1.72:8082/repository/docker-host/'
    }

    stages {
        stage('Create and Send Docker Image to Nexus') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'nexusCredential', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                        def dockerImageTag = "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}"
                        def nexusImageTag = "${NEXUS_URL}${dockerImageTag}"
                        
                        // Login to Nexus Docker registry
                        sh "echo ${NEXUS_PASSWORD} | docker login ${NEXUS_URL} -u ${NEXUS_USERNAME} --password-stdin"
                        
                        // Build and push the image to Nexus
                        sh """
                          docker build -t ${dockerImageTag} .
                          docker tag ${dockerImageTag} ${nexusImageTag}
                          docker push ${nexusImageTag}
                        """
                    }
                }
            }
        }

        stage('Show Docker Images in Local Repository') {
            steps {
                sh 'docker images'
            }
        }

        stage('Remove Docker Image from Local Repository') {
            steps {
                script {
                    def dockerImageTag = "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}"
                    def nexusImageTag = "${NEXUS_URL}${dockerImageTag}"
                    
                    // Remove local image
                    sh "docker rmi ${dockerImageTag} ${nexusImageTag}"
                }
            }
        }

        stage('Show Docker Images after RM') {
            steps {
                sh 'docker images'
            }
        }

        stage('Pull Image from Nexus') {
            steps {
                script {
                    def nexusImageTag = "${NEXUS_URL}${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}"
                    
                    // Pull the image from Nexus
                    sh "docker pull ${nexusImageTag}"
                }
            }
        }

        stage('Run Docker Container from Nexus Image') {
            steps {
                script {
                    def nexusImageTag = "${NEXUS_URL}${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_VERSION}"
                    
                    // Run the pulled image
                    sh "docker run -d --name my-httpd-container -p 83:80 ${nexusImageTag}"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
            // Optionally, clean up any containers still running
            sh 'docker rm -f my-httpd-container || true'
        }
    }
}
